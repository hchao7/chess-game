class Piece:

    @staticmethod
    def multiply(a, b):
        return a * b

print(Piece.multiply(2, 3))


numerical_list = [
['7','r','n','b','q','k','b','n','r'],
['6','p','p','p','p','p','p','p','p'],
['5','.','.','.','.','.','.','.','.'],
['4','.','.','.','.','.','.','.','.'],
['3','.','.','.','.','.','.','.','.'],
['2','.','.','.','.','.','.','.','.'],
['1','P','P','P','P','P','P','P','P'],
['0','R','N','B','Q','K','B','N','R'],
[' ','0','1','2','3','4','5','6','7']]

list = [
['8','r','n','b','q','k','b','n','r'],
['7','p','p','p','p','p','p','p','p'],
['6','.','.','.','.','.','.','.','.'],
['5','.','.','.','.','.','.','.','.'],
['4','.','.','.','.','.','.','.','.'],
['3','.','.','.','.','.','.','.','.'],
['2','P','P','P','P','P','P','P','P'],
['1','R','N','B','Q','K','B','N','R'],
[' ','a','b','c','d','e','f','g','h']]

list = [
['8','r','n','b','q','k','b','n','r'],
['7','p','p','p','p','.','p','p','p'],
['6','.','.','.','.','.','.','.','.'],
['5','.','.','.','.','.','.','.','.'],
['4','.','.','.','.','.','.','.','.'],
['3','.','.','.','.','.','.','.','.'],
['2','P','P','P','P','P','P','P','P'],
['1','R','N','B','Q','K','B','N','R'],
[' ','a','b','c','d','e','f','g','h']]

def coordinates_to_index(coordinates):
    # Split string into letter, number
    letter = coordinates[0]
    number = coordinates[1]

    # Create column dictionary
    letter_to_column_dict = {
        'a': 1, 'b': 2, 'c': 3, 'd': 4,
        'e': 5, 'f': 6, 'g': 7, 'h': 8
    }

    # Create row dictionary
    number_to_row_dict = {
        '1': 7, '2': 6, '3': 5, '4': 4,
        '5': 3, '6': 2, '7': 1, '8': 0
    }

    # Create list index
    column = letter_to_column_dict[letter]
    row = number_to_row_dict[number]

    return [row, column]

for j in ['8','7','6','5','4','3','2','1']:
    row = []
    for i in ['a','b','c','d','e','f','g','h']:
        list_index = coordinates_to_index(i+j)
        row.append(list_index)
    print(row)

'''
[[0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8]]
[[1, 1], [1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8]]
[[2, 1], [2, 2], [2, 3], [2, 4], [2, 5], [2, 6], [2, 7], [2, 8]]
[[3, 1], [3, 2], [3, 3], [3, 4], [3, 5], [3, 6], [3, 7], [3, 8]]
[[4, 1], [4, 2], [4, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8]]
[[5, 1], [5, 2], [5, 3], [5, 4], [5, 5], [5, 6], [5, 7], [5, 8]]
[[6, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8]]
[[7, 1], [7, 2], [7, 3], [7, 4], [7, 5], [7, 6], [7, 7], [7, 8]]
'''
